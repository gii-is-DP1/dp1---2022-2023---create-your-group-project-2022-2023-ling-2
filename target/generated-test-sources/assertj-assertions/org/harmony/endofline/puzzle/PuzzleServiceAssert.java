package org.harmony.endofline.puzzle;

/**
 * {@link PuzzleService} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractPuzzleServiceAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class PuzzleServiceAssert extends AbstractPuzzleServiceAssert<PuzzleServiceAssert, PuzzleService> {

  /**
   * Creates a new <code>{@link PuzzleServiceAssert}</code> to make assertions on actual PuzzleService.
   * @param actual the PuzzleService we want to make assertions on.
   */
  public PuzzleServiceAssert(PuzzleService actual) {
    super(actual, PuzzleServiceAssert.class);
  }

  /**
   * An entry point for PuzzleServiceAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myPuzzleService)</code> and get specific assertion with code completion.
   * @param actual the PuzzleService we want to make assertions on.
   * @return a new <code>{@link PuzzleServiceAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static PuzzleServiceAssert assertThat(PuzzleService actual) {
    return new PuzzleServiceAssert(actual);
  }
}
