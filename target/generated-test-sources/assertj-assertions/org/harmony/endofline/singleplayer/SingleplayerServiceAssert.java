package org.harmony.endofline.singleplayer;

/**
 * {@link SingleplayerService} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractSingleplayerServiceAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class SingleplayerServiceAssert extends AbstractSingleplayerServiceAssert<SingleplayerServiceAssert, SingleplayerService> {

  /**
   * Creates a new <code>{@link SingleplayerServiceAssert}</code> to make assertions on actual SingleplayerService.
   * @param actual the SingleplayerService we want to make assertions on.
   */
  public SingleplayerServiceAssert(SingleplayerService actual) {
    super(actual, SingleplayerServiceAssert.class);
  }

  /**
   * An entry point for SingleplayerServiceAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(mySingleplayerService)</code> and get specific assertion with code completion.
   * @param actual the SingleplayerService we want to make assertions on.
   * @return a new <code>{@link SingleplayerServiceAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static SingleplayerServiceAssert assertThat(SingleplayerService actual) {
    return new SingleplayerServiceAssert(actual);
  }
}
