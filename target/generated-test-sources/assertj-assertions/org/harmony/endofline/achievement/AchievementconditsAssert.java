package org.harmony.endofline.achievement;

/**
 * {@link Achievement.condits} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractAchievementconditsAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class AchievementconditsAssert extends AbstractAchievementconditsAssert<AchievementconditsAssert, Achievement.condits> {

  /**
   * Creates a new <code>{@link AchievementconditsAssert}</code> to make assertions on actual Achievement.condits.
   * @param actual the Achievement.condits we want to make assertions on.
   */
  public AchievementconditsAssert(Achievement.condits actual) {
    super(actual, AchievementconditsAssert.class);
  }

  /**
   * An entry point for AchievementconditsAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myAchievement.condits)</code> and get specific assertion with code completion.
   * @param actual the Achievement.condits we want to make assertions on.
   * @return a new <code>{@link AchievementconditsAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static AchievementconditsAssert assertThat(Achievement.condits actual) {
    return new AchievementconditsAssert(actual);
  }
}
