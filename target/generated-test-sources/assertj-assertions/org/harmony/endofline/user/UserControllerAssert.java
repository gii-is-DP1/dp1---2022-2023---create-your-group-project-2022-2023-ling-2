package org.harmony.endofline.user;

/**
 * {@link UserController} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractUserControllerAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class UserControllerAssert extends AbstractUserControllerAssert<UserControllerAssert, UserController> {

  /**
   * Creates a new <code>{@link UserControllerAssert}</code> to make assertions on actual UserController.
   * @param actual the UserController we want to make assertions on.
   */
  public UserControllerAssert(UserController actual) {
    super(actual, UserControllerAssert.class);
  }

  /**
   * An entry point for UserControllerAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myUserController)</code> and get specific assertion with code completion.
   * @param actual the UserController we want to make assertions on.
   * @return a new <code>{@link UserControllerAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static UserControllerAssert assertThat(UserController actual) {
    return new UserControllerAssert(actual);
  }
}
