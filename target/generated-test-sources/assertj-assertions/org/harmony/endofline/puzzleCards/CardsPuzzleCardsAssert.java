package org.harmony.endofline.puzzleCards;

import org.harmony.endofline.puzzleCards.PuzzleCards;

/**
 * {@link PuzzleCards} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractCardsPuzzleCardsAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class CardsPuzzleCardsAssert extends AbstractCardsPuzzleCardsAssert<CardsPuzzleCardsAssert, PuzzleCards> {

  /**
   * Creates a new <code>{@link CardsPuzzleCardsAssert}</code> to make assertions on actual PuzzleCards.
   * @param actual the PuzzleCards we want to make assertions on.
   */
  public CardsPuzzleCardsAssert(PuzzleCards actual) {
    super(actual, CardsPuzzleCardsAssert.class);
  }

  /**
   * An entry point for CardsPuzzleCardsAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myPuzzleCards)</code> and get specific assertion with code completion.
   * @param actual the PuzzleCards we want to make assertions on.
   * @return a new <code>{@link CardsPuzzleCardsAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static CardsPuzzleCardsAssert assertThat(PuzzleCards actual) {
    return new CardsPuzzleCardsAssert(actual);
  }
}
