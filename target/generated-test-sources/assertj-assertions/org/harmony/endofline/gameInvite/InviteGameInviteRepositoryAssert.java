package org.harmony.endofline.gameInvite;

import org.harmony.endofline.gameInvite.GameInviteRepository;

/**
 * {@link GameInviteRepository} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractInviteGameInviteRepositoryAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class InviteGameInviteRepositoryAssert extends AbstractInviteGameInviteRepositoryAssert<InviteGameInviteRepositoryAssert, GameInviteRepository> {

  /**
   * Creates a new <code>{@link InviteGameInviteRepositoryAssert}</code> to make assertions on actual GameInviteRepository.
   * @param actual the GameInviteRepository we want to make assertions on.
   */
  public InviteGameInviteRepositoryAssert(GameInviteRepository actual) {
    super(actual, InviteGameInviteRepositoryAssert.class);
  }

  /**
   * An entry point for InviteGameInviteRepositoryAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myGameInviteRepository)</code> and get specific assertion with code completion.
   * @param actual the GameInviteRepository we want to make assertions on.
   * @return a new <code>{@link InviteGameInviteRepositoryAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static InviteGameInviteRepositoryAssert assertThat(GameInviteRepository actual) {
    return new InviteGameInviteRepositoryAssert(actual);
  }
}
