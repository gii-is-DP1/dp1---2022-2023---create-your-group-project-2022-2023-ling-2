package org.harmony.endofline.gameInvite;

import org.harmony.endofline.gameInvite.GameInvite;

/**
 * {@link GameInvite} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractInviteGameInviteAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class InviteGameInviteAssert extends AbstractInviteGameInviteAssert<InviteGameInviteAssert, GameInvite> {

  /**
   * Creates a new <code>{@link InviteGameInviteAssert}</code> to make assertions on actual GameInvite.
   * @param actual the GameInvite we want to make assertions on.
   */
  public InviteGameInviteAssert(GameInvite actual) {
    super(actual, InviteGameInviteAssert.class);
  }

  /**
   * An entry point for InviteGameInviteAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myGameInvite)</code> and get specific assertion with code completion.
   * @param actual the GameInvite we want to make assertions on.
   * @return a new <code>{@link InviteGameInviteAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static InviteGameInviteAssert assertThat(GameInvite actual) {
    return new InviteGameInviteAssert(actual);
  }
}
