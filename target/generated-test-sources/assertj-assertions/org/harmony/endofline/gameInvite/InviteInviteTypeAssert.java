package org.harmony.endofline.gameInvite;

import org.harmony.endofline.gameInvite.InviteType;

/**
 * {@link InviteType} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractInviteInviteTypeAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class InviteInviteTypeAssert extends AbstractInviteInviteTypeAssert<InviteInviteTypeAssert, InviteType> {

  /**
   * Creates a new <code>{@link InviteInviteTypeAssert}</code> to make assertions on actual InviteType.
   * @param actual the InviteType we want to make assertions on.
   */
  public InviteInviteTypeAssert(InviteType actual) {
    super(actual, InviteInviteTypeAssert.class);
  }

  /**
   * An entry point for InviteInviteTypeAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myInviteType)</code> and get specific assertion with code completion.
   * @param actual the InviteType we want to make assertions on.
   * @return a new <code>{@link InviteInviteTypeAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static InviteInviteTypeAssert assertThat(InviteType actual) {
    return new InviteInviteTypeAssert(actual);
  }
}
